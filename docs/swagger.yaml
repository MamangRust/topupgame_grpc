definitions:
  requests.AuthRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  requests.CreateBankRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  requests.CreateCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  requests.CreateMerchantRequest:
    properties:
      address:
        type: string
      contact_email:
        type: string
      contact_phone:
        type: string
      description:
        type: string
      name:
        type: string
      status:
        type: string
      user_id:
        type: integer
    required:
    - address
    - contact_email
    - contact_phone
    - description
    - name
    - status
    - user_id
    type: object
  requests.CreateNominalRequest:
    properties:
      name:
        type: string
      price:
        minimum: 0
        type: number
      quantity:
        minimum: 1
        type: integer
      voucher_id:
        minimum: 1
        type: integer
    required:
    - name
    - price
    - quantity
    - voucher_id
    type: object
  requests.CreateRoleRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  requests.CreateTransactionRequest:
    properties:
      amount:
        type: integer
      bank_id:
        minimum: 1
        type: integer
      category_id:
        minimum: 1
        type: integer
      merchant_id:
        minimum: 1
        type: integer
      nominal_id:
        minimum: 1
        type: integer
      payment_method:
        type: string
      user_id:
        minimum: 1
        type: integer
      voucher_id:
        type: integer
    required:
    - bank_id
    - category_id
    - merchant_id
    - nominal_id
    - payment_method
    - user_id
    type: object
  requests.CreateUserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    type: object
  requests.RefreshTokenRequest:
    properties:
      refresh_token:
        minLength: 1
        type: string
    required:
    - refresh_token
    type: object
  requests.UpdateBankRequest:
    properties:
      id:
        minimum: 1
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  requests.UpdateCategoryRequest:
    properties:
      id:
        minimum: 1
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  requests.UpdateMerchantRequest:
    properties:
      address:
        type: string
      contact_email:
        type: string
      contact_phone:
        type: string
      description:
        type: string
      merchant_id:
        type: integer
      name:
        type: string
      status:
        type: string
      user_id:
        type: integer
    required:
    - address
    - contact_email
    - contact_phone
    - description
    - merchant_id
    - name
    - status
    - user_id
    type: object
  requests.UpdateNominalRequest:
    properties:
      id:
        minimum: 1
        type: integer
      name:
        type: string
      price:
        minimum: 0
        type: number
      quantity:
        minimum: 1
        type: integer
      voucher_id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  requests.UpdateRoleRequest:
    properties:
      id:
        minimum: 1
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  requests.UpdateTransactionRequest:
    properties:
      amount:
        type: integer
      bank_id:
        minimum: 1
        type: integer
      category_id:
        minimum: 1
        type: integer
      id:
        minimum: 1
        type: integer
      merchant_id:
        minimum: 1
        type: integer
      nominal_id:
        minimum: 1
        type: integer
      payment_method:
        type: string
      status:
        type: string
      user_id:
        minimum: 1
        type: integer
      voucher_id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  requests.UpdateUserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 6
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    - user_id
    type: object
  response.ApiResponseBank:
    properties:
      data:
        $ref: '#/definitions/response.BankResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.BankResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankMonthAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountBankFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankMonthAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountBankSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthMethodBankResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankYearAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountBankFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankYearAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountBankSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseBankYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearMethodBankResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategory:
    properties:
      data:
        $ref: '#/definitions/response.CategoryResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.CategoryResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryMonthAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountCategoryFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryMonthAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountCategorySuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthMethodCategoryResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryYearAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountCategoryFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryYearAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountCategorySuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseCategoryYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearMethodCategoryResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseGetMe:
    properties:
      data:
        $ref: '#/definitions/response.UserResponse'
      messsage:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseLogin:
    properties:
      data:
        $ref: '#/definitions/response.TokenResponse'
      messsage:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseMerchant:
    properties:
      data:
        $ref: '#/definitions/response.MerchantResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseMerchantAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseMerchantDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseMerchantDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.MerchantResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominal:
    properties:
      data:
        $ref: '#/definitions/response.NominalResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.NominalResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalMonthAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountNominalFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalMonthAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountNominalSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthMethodNominalResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalYearAmountFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountNominalFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalYearAmountSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountNominalSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseNominalYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearMethodNominalResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsePaginationBank:
    properties:
      data:
        items:
          $ref: '#/definitions/response.BankResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationBankDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.BankResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationCategory:
    properties:
      data:
        items:
          $ref: '#/definitions/response.CategoryResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationCategoryDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.CategoryResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationMerchant:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MerchantResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationMerchantDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MerchantResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationNominal:
    properties:
      data:
        items:
          $ref: '#/definitions/response.NominalResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationNominalDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.NominalResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationRole:
    properties:
      data:
        items:
          $ref: '#/definitions/response.RoleResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationRoleDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.RoleResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationTransaction:
    properties:
      data:
        items:
          $ref: '#/definitions/response.TransactionResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationTransactionDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.TransactionResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationUser:
    properties:
      data:
        items:
          $ref: '#/definitions/response.UserResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationUserDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.UserResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationVoucher:
    properties:
      data:
        items:
          $ref: '#/definitions/response.VoucherResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponsePaginationVoucherDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/response.VoucherResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/response.PaginationMeta'
      status:
        type: string
    type: object
  response.ApiResponseRefreshToken:
    properties:
      data:
        $ref: '#/definitions/response.TokenResponse'
      messsage:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseRegister:
    properties:
      data:
        $ref: '#/definitions/response.UserResponse'
      messsage:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseRole:
    properties:
      data:
        $ref: '#/definitions/response.RoleResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseRoleAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseTransaction:
    properties:
      data:
        $ref: '#/definitions/response.TransactionResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseTransactionAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseTransactionDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseTransactionDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.TransactionResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseUser:
    properties:
      data:
        $ref: '#/definitions/response.UserResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseUserAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseUserDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseUserDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.UserResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseVoucher:
    properties:
      data:
        $ref: '#/definitions/response.VoucherResponse'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseVoucherAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseVoucherDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponseVoucherDeleteAt:
    properties:
      data:
        $ref: '#/definitions/response.VoucherResponseDeleteAt'
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionMonthFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountTransactionFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthMethodTransactionResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionMonthSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountTransactionSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionYearFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountTransactionFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearMethodTransactionResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesTransactionYearSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountTransactionSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherMonthFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountVoucherFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthMethodVoucherResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherMonthSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.MonthAmountVoucherSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherYearFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountVoucherFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearMethodVoucherResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ApiResponsesVoucherYearSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/response.YearAmountVoucherSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.BankResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.BankResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.CategoryResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.CategoryResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  response.MerchantResponse:
    properties:
      address:
        type: string
      contact_email:
        type: string
      contact_phone:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  response.MerchantResponseDeleteAt:
    properties:
      address:
        type: string
      contact_email:
        type: string
      contact_phone:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  response.MonthAmountBankFailedResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountBankSuccessResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountCategoryFailedResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountCategorySuccessResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountNominalFailedResponse:
    properties:
      id:
        type: integer
      month:
        type: string
      nominal_name:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountNominalSuccessResponse:
    properties:
      id:
        type: integer
      mnc_year:
        type: string
      month:
        type: string
      nominal_name:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
    type: object
  response.MonthAmountTransactionFailedResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountTransactionSuccessResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.MonthAmountVoucherFailedResponse:
    properties:
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      voucher_name:
        type: string
      year:
        type: string
    type: object
  response.MonthAmountVoucherSuccessResponse:
    properties:
      id:
        type: integer
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      voucher_name:
        type: string
      year:
        type: string
    type: object
  response.MonthMethodBankResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
    type: object
  response.MonthMethodCategoryResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
    type: object
  response.MonthMethodNominalResponse:
    properties:
      id:
        type: integer
      month:
        type: string
      nominal_name:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
    type: object
  response.MonthMethodTransactionResponse:
    properties:
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
    type: object
  response.MonthMethodVoucherResponse:
    properties:
      id:
        type: integer
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      voucher_name:
        type: string
    type: object
  response.NominalResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updated_at:
        type: string
      voucher_id:
        type: integer
    type: object
  response.NominalResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updated_at:
        type: string
      voucher_id:
        type: integer
    type: object
  response.PaginationMeta:
    properties:
      current_page:
        type: integer
      page_size:
        type: integer
      total_pages:
        type: integer
      total_records:
        type: integer
    type: object
  response.RoleResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.RoleResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.TransactionResponse:
    properties:
      bank_id:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      merchant_id:
        type: integer
      nominal_id:
        type: integer
      payment_method:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      voucher_id:
        type: integer
    type: object
  response.TransactionResponseDeleteAt:
    properties:
      bank_id:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      merchant_id:
        type: integer
      nominal_id:
        type: integer
      payment_method:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      voucher_id:
        type: integer
    type: object
  response.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      updated_at:
        type: string
    type: object
  response.UserResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      updated_at:
        type: string
    type: object
  response.VoucherResponse:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      image_name:
        type: string
      merchant_id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.VoucherResponseDeleteAt:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      image_name:
        type: string
      merchant_id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.YearAmountBankFailedResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountBankSuccessResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountCategoryFailedResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountCategorySuccessResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountNominalFailedResponse:
    properties:
      id:
        type: integer
      nominal_name:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountNominalSuccessResponse:
    properties:
      id:
        type: integer
      nominal_name:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountTransactionFailedResponse:
    properties:
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountTransactionSuccessResponse:
    properties:
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  response.YearAmountVoucherFailedResponse:
    properties:
      id:
        type: integer
      total_amount:
        type: integer
      total_failed:
        type: integer
      voucher_name:
        type: string
      year:
        type: string
    type: object
  response.YearAmountVoucherSuccessResponse:
    properties:
      id:
        type: integer
      total_amount:
        type: integer
      total_success:
        type: integer
      voucher_name:
        type: string
      year:
        type: string
    type: object
  response.YearMethodBankResponse:
    properties:
      bank_name:
        type: string
      id:
        type: integer
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      year:
        type: string
    type: object
  response.YearMethodCategoryResponse:
    properties:
      category_name:
        type: string
      id:
        type: integer
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      year:
        type: string
    type: object
  response.YearMethodNominalResponse:
    properties:
      id:
        type: integer
      nominal_name:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      year:
        type: string
    type: object
  response.YearMethodTransactionResponse:
    properties:
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      year:
        type: string
    type: object
  response.YearMethodVoucherResponse:
    properties:
      id:
        type: integer
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      voucher_name:
        type: string
      year:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/hello:
    get:
      description: Returns a simple "Hello" message for testing purposes.
      produces:
      - application/json
      responses:
        "200":
          description: Hello
          schema:
            type: string
      summary: Returns a "Hello" message
      tags:
      - Auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user using the provided email and password.
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Authenticate a user
      tags:
      - Auth
  /api/auth/me:
    get:
      description: Retrieves the current user's information using a valid access token
        from the Authorization header.
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseGetMe'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      - BearerToken: []
      summary: Get current user information
      tags:
      - Auth
  /api/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using a valid refresh token.
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseRefreshToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Refresh access token
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details.
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseRegister'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/bank:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all banks
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of banks
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationBank'
        "500":
          description: Failed to retrieve bank data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all banks
      tags:
      - Bank
  /api/bank/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a bank by ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bank data
          schema:
            $ref: '#/definitions/response.ApiResponseBank'
        "400":
          description: Invalid bank ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve bank data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find bank by ID
      tags:
      - Bank
  /api/bank/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active banks
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active banks
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationBankDeleteAt'
        "500":
          description: Failed to retrieve bank data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active banks
      tags:
      - Bank
  /api/bank/create:
    post:
      consumes:
      - application/json
      description: Create an existing bank record with the provided details
      parameters:
      - description: Create bank request
        in: body
        name: CreateBankRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateBankRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created bank
          schema:
            $ref: '#/definitions/response.ApiResponseBank'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create bank
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create an existing bank
      tags:
      - Bank
  /api/bank/delete/{id}:
    post:
      consumes:
      - application/json
      description: Permanently delete a bank record by its ID.
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted bank record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseBankDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete bank
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a bank
      tags:
      - Bank
  /api/bank/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all trashed bank records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all bank records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseBankDelete'
        "500":
          description: Failed to delete banks
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all trashed banks
      tags:
      - Bank
  /api/bank/merchant/monthly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed amounts by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountFailed'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed amounts by merchant
      tags:
      - Bank
  /api/bank/merchant/monthly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success amounts by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountSuccess'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success amounts by merchant
      tags:
      - Bank
  /api/bank/merchant/monthly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed methods by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed methods by merchant
      tags:
      - Bank
  /api/bank/merchant/monthly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success methods by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success methods by merchant
      tags:
      - Bank
  /api/bank/merchant/yearly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed amounts by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountFailed'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed amounts by merchant
      tags:
      - Bank
  /api/bank/merchant/yearly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success amounts by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountSuccess'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success amounts by merchant
      tags:
      - Bank
  /api/bank/merchant/yearly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed methods by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed methods by merchant
      tags:
      - Bank
  /api/bank/merchant/yearly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success methods by merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success methods by merchant
      tags:
      - Bank
  /api/bank/monthly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed amounts
      tags:
      - Bank
  /api/bank/monthly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success amounts
      tags:
      - Bank
  /api/bank/monthly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed methods
      tags:
      - Bank
  /api/bank/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success methods
      tags:
      - Bank
  /api/bank/mycategory/monthly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed amounts by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountFailed'
        "400":
          description: Invalid bank ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed amounts by ID
      tags:
      - Bank
  /api/bank/mycategory/monthly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success amounts by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthAmountSuccess'
        "400":
          description: Invalid bank ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success amounts by ID
      tags:
      - Bank
  /api/bank/mycategory/monthly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank failed methods by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank failed methods by ID
      tags:
      - Bank
  /api/bank/mycategory/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly bank success methods by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankMonthMethod'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly bank success methods by ID
      tags:
      - Bank
  /api/bank/mycategory/yearly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed amounts by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountFailed'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed amounts by ID
      tags:
      - Bank
  /api/bank/mycategory/yearly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success amounts by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountSuccess'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success amounts by ID
      tags:
      - Bank
  /api/bank/mycategory/yearly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed methods by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed methods by ID
      tags:
      - Bank
  /api/bank/mycategory/yearly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success methods by bank ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid bank ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success methods by ID
      tags:
      - Bank
  /api/bank/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed bank record by its ID.
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored bank
          schema:
            $ref: '#/definitions/response.ApiResponseBankDeleteAt'
        "400":
          description: Invalid bank ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore bank
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed bank
      tags:
      - Bank
  /api/bank/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all trashed bank records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all banks
          schema:
            $ref: '#/definitions/response.ApiResponseBankAll'
        "500":
          description: Failed to restore banks
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all trashed banks
      tags:
      - Bank
  /api/bank/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed bank records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed bank data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationBankDeleteAt'
        "500":
          description: Failed to retrieve bank data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed banks
      tags:
      - Bank
  /api/bank/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed bank record by its ID.
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed bank
          schema:
            $ref: '#/definitions/response.ApiResponseBankDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed bank
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed bank
      tags:
      - Bank
  /api/bank/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing bank record with the provided details
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update bank request
        in: body
        name: UpdateBankRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateBankRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated bank
          schema:
            $ref: '#/definitions/response.ApiResponseBank'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update bank
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing bank
      tags:
      - Bank
  /api/bank/yearly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed amounts
      tags:
      - Bank
  /api/bank/yearly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearAmountSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success amounts
      tags:
      - Bank
  /api/bank/yearly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank failed methods
      tags:
      - Bank
  /api/bank/yearly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly bank success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseBankYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly bank success methods
      tags:
      - Bank
  /api/category:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Categorys
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Categorys
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCategory'
        "500":
          description: Failed to retrieve Category data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all Categorys
      tags:
      - Category
  /api/category/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a Category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Category data
          schema:
            $ref: '#/definitions/response.ApiResponseCategory'
        "400":
          description: Invalid Category ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve Category data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find Category by ID
      tags:
      - Category
  /api/category/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active Categorys
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active Categorys
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCategoryDeleteAt'
        "500":
          description: Failed to retrieve Category data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active Categorys
      tags:
      - Category
  /api/category/create:
    post:
      consumes:
      - application/json
      description: Create an existing Category record with the provided details
      parameters:
      - description: Create Category request
        in: body
        name: CreateCategoryRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created Category
          schema:
            $ref: '#/definitions/response.ApiResponseCategory'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create Category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create an existing Category
      tags:
      - Category
  /api/category/delete/{id}:
    post:
      consumes:
      - application/json
      description: Permanently delete a Category record by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted Category record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete Category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a Category
      tags:
      - Category
  /api/category/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all trashed Category records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all Category records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryDelete'
        "500":
          description: Failed to delete Categorys
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all trashed Categorys
      tags:
      - Category
  /api/category/merchant/monthly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountFailed'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed amounts by merchant
      tags:
      - Category
  /api/category/merchant/monthly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountSuccess'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success amounts by merchant
      tags:
      - Category
  /api/category/merchant/monthly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed methods by merchant
      tags:
      - Category
  /api/category/merchant/monthly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success methods by merchant
      tags:
      - Category
  /api/category/merchant/yearly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountFailed'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed amounts by merchant
      tags:
      - Category
  /api/category/merchant/yearly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountSuccess'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success amounts by merchant
      tags:
      - Category
  /api/category/merchant/yearly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed methods by merchant
      tags:
      - Category
  /api/category/merchant/yearly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success methods by merchant
      tags:
      - Category
  /api/category/monthly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed amounts
      tags:
      - Category
  /api/category/monthly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success amounts
      tags:
      - Category
  /api/category/monthly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed methods
      tags:
      - Category
  /api/category/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success methods
      tags:
      - Category
  /api/category/mycategory/monthly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed amounts by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountFailed'
        "400":
          description: Invalid category ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed amounts by ID
      tags:
      - Category
  /api/category/mycategory/monthly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success amounts by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthAmountSuccess'
        "400":
          description: Invalid category ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success amounts by ID
      tags:
      - Category
  /api/category/mycategory/monthly-method-category/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category failed methods by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category failed methods by ID
      tags:
      - Category
  /api/category/mycategory/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly category success methods by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryMonthMethod'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly category success methods by ID
      tags:
      - Category
  /api/category/mycategory/yearly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed amounts by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountFailed'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed amounts by ID
      tags:
      - Category
  /api/category/mycategory/yearly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success amounts by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountSuccess'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success amounts by ID
      tags:
      - Category
  /api/category/mycategory/yearly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed methods by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed methods by ID
      tags:
      - Category
  /api/category/mycategory/yearly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success methods by category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid category ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success methods by ID
      tags:
      - Category
  /api/category/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed Category record by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored Category
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryDeleteAt'
        "400":
          description: Invalid Category ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore Category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed Category
      tags:
      - Category
  /api/category/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all trashed Category records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all Categorys
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryAll'
        "500":
          description: Failed to restore Categorys
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all trashed Categorys
      tags:
      - Category
  /api/category/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed Category records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed Category data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCategoryDeleteAt'
        "500":
          description: Failed to retrieve Category data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed Categorys
      tags:
      - Category
  /api/category/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed Category record by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed Category
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed Category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed Category
      tags:
      - Category
  /api/category/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing Category record with the provided details
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Category request
        in: body
        name: UpdateCategoryRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Category
          schema:
            $ref: '#/definitions/response.ApiResponseCategory'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update Category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing Category
      tags:
      - Category
  /api/category/yearly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed amounts
      tags:
      - Category
  /api/category/yearly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearAmountSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success amounts
      tags:
      - Category
  /api/category/yearly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category failed methods
      tags:
      - Category
  /api/category/yearly-method-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly category success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseCategoryYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly category success methods
      tags:
      - Category
  /api/merchant:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all merchant
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of merchant
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all merchant
      tags:
      - Merchant
  /api/merchant/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by ID
      parameters:
      - description: merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: merchant data
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find merchant by ID
      tags:
      - Merchant
  /api/merchant/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active merchant
      produces:
      - application/json
      responses:
        "200":
          description: List of active merchant
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchantDeleteAt'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active merchant
      tags:
      - Merchant
  /api/merchant/create:
    post:
      consumes:
      - application/json
      description: Create a new merchant with the provided details
      parameters:
      - description: Create merchant request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new merchant
      tags:
      - Merchant
  /api/merchant/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a merchant record by its ID.
      parameters:
      - description: merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted merchant record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete merchant:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a merchant
      tags:
      - Merchant
  /api/merchant/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a merchant record by its ID.
      parameters:
      - description: merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted merchant record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete merchant:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a merchant
      tags:
      - Merchant
  /api/merchant/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed merchant record by its ID.
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDeleteAt'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed merchant
      tags:
      - Merchant
  /api/merchant/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed merchant record by its ID.
      parameters:
      - description: merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored merchant all
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantAll'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed merchant
      tags:
      - Merchant
  /api/merchant/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed merchant records
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed merchant data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchantDeleteAt'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed merchant
      tags:
      - Merchant
  /api/merchant/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed merchant record by its ID.
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed merchant
      tags:
      - Merchant
  /api/merchant/update:
    post:
      consumes:
      - application/json
      description: Update an existing merchant record with the provided details
      parameters:
      - description: Update merchant request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing merchant
      tags:
      - Merchant
  /api/nominal:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Nominals
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Nominals
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationNominal'
        "500":
          description: Failed to retrieve Nominal data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all Nominals
      tags:
      - Nominal
  /api/nominal/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a Nominal by ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nominal data
          schema:
            $ref: '#/definitions/response.ApiResponseNominal'
        "400":
          description: Invalid Nominal ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve Nominal data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find Nominal by ID
      tags:
      - Nominal
  /api/nominal/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active Nominals
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active Nominals
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationNominalDeleteAt'
        "500":
          description: Failed to retrieve Nominal data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active Nominals
      tags:
      - Nominal
  /api/nominal/create:
    post:
      consumes:
      - application/json
      description: Create an existing Nominal record with the provided details
      parameters:
      - description: Create Nominal request
        in: body
        name: CreateNominalRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateNominalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created Nominal
          schema:
            $ref: '#/definitions/response.ApiResponseNominal'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create Nominal
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create an existing Nominal
      tags:
      - Nominal
  /api/nominal/delete/{id}:
    post:
      consumes:
      - application/json
      description: Permanently delete a Nominal record by its ID.
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted Nominal record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseNominalDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete Nominal
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a Nominal
      tags:
      - Nominal
  /api/nominal/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all trashed Nominal records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all Nominal records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseNominalDelete'
        "500":
          description: Failed to delete Nominals
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all trashed Nominals
      tags:
      - Nominal
  /api/nominal/merchant/monthly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountFailed'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed amounts by merchant
      tags:
      - Nominal
  /api/nominal/merchant/monthly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountSuccess'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success amounts by merchant
      tags:
      - Nominal
  /api/nominal/merchant/monthly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed methods by merchant
      tags:
      - Nominal
  /api/nominal/merchant/monthly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success methods by merchant
      tags:
      - Nominal
  /api/nominal/merchant/yearly-amount-failed/{merchant_is}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountFailed'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed amounts by merchant
      tags:
      - Nominal
  /api/nominal/merchant/yearly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountSuccess'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success amounts by merchant
      tags:
      - Nominal
  /api/nominal/merchant/yearly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed methods by merchant
      tags:
      - Nominal
  /api/nominal/merchant/yearly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success methods by merchant
      tags:
      - Nominal
  /api/nominal/monthly/failed/amount:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed amounts
      tags:
      - Nominal
  /api/nominal/monthly/failed/method:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed methods
      tags:
      - Nominal
  /api/nominal/monthly/success/amount:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success amounts
      tags:
      - Nominal
  /api/nominal/monthly/success/method:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success methods
      tags:
      - Nominal
  /api/nominal/mynominal/monthly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed amounts by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountFailed'
        "400":
          description: Invalid nominal ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed amounts by ID
      tags:
      - Nominal
  /api/nominal/mynominal/monthly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success amounts by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthAmountSuccess'
        "400":
          description: Invalid nominal ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success amounts by ID
      tags:
      - Nominal
  /api/nominal/mynominal/monthly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal failed methods by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal failed methods by ID
      tags:
      - Nominal
  /api/nominal/mynominal/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly nominal success methods by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalMonthMethod'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly nominal success methods by ID
      tags:
      - Nominal
  /api/nominal/mynominal/yearly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed amounts by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountFailed'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed amounts by ID
      tags:
      - Nominal
  /api/nominal/mynominal/yearly-amount-nominal/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success amounts by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountSuccess'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success amounts by ID
      tags:
      - Nominal
  /api/nominal/mynominal/yearly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed methods by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed methods by ID
      tags:
      - Nominal
  /api/nominal/mynominal/yearly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success methods by nominal ID
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid nominal ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success methods by ID
      tags:
      - Nominal
  /api/nominal/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed Nominal record by its ID.
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored Nominal
          schema:
            $ref: '#/definitions/response.ApiResponseNominalDeleteAt'
        "400":
          description: Invalid Nominal ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore Nominal
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed Nominal
      tags:
      - Nominal
  /api/nominal/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all trashed Nominal records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all Nominals
          schema:
            $ref: '#/definitions/response.ApiResponseNominalAll'
        "500":
          description: Failed to restore Nominals
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all trashed Nominals
      tags:
      - Nominal
  /api/nominal/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed Nominal records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed Nominal data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationNominalDeleteAt'
        "500":
          description: Failed to retrieve Nominal data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed Nominals
      tags:
      - Nominal
  /api/nominal/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed Nominal record by its ID.
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed Nominal
          schema:
            $ref: '#/definitions/response.ApiResponseNominalDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed Nominal
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed Nominal
      tags:
      - Nominal
  /api/nominal/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing Nominal record with the provided details
      parameters:
      - description: Nominal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Nominal request
        in: body
        name: UpdateNominalRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateNominalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Nominal
          schema:
            $ref: '#/definitions/response.ApiResponseNominal'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update Nominal
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing Nominal
      tags:
      - Nominal
  /api/nominal/yearly/failed/amount:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed amounts
      tags:
      - Nominal
  /api/nominal/yearly/failed/method:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal failed methods
      tags:
      - Nominal
  /api/nominal/yearly/success/amount:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearAmountSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success amounts
      tags:
      - Nominal
  /api/nominal/yearly/success/method:
    get:
      consumes:
      - application/json
      description: Retrieve yearly nominal success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseNominalYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly nominal success methods
      tags:
      - Nominal
  /api/role:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of roles with optional search and pagination
        parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRole'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all roles
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create a new role with the provided details.
      parameters:
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new role
      tags:
      - Role
  /api/role/{id}:
    delete:
      consumes:
      - application/json
      description: Soft-delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Soft-deleted role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to soft-delete role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft-delete a role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Retrieve a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a role by ID
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Update an existing role with the provided details.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID or request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a role
      tags:
      - Role
  /api/role/active:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of active roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch active roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get active roles
      tags:
      - Role
  /api/role/permanent-all:
    delete:
      consumes:
      - application/json
      description: Permanently delete all roles.
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted roles data
          schema:
            $ref: '#/definitions/response.ApiResponseRoleAll'
        "500":
          description: Failed to delete all roles permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all roles
      tags:
      - Role
  /api/role/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete role permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a role
      tags:
      - Role
  /api/role/restore-all:
    put:
      consumes:
      - application/json
      description: Restore all soft-deleted roles.
      produces:
      - application/json
      responses:
        "200":
          description: Restored roles data
          schema:
            $ref: '#/definitions/response.ApiResponseRoleAll'
        "500":
          description: Failed to restore all roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all soft-deleted roles
      tags:
      - Role
  /api/role/restore/{id}:
    put:
      consumes:
      - application/json
      description: Restore a soft-deleted role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a soft-deleted role
      tags:
      - Role
  /api/role/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of trashed roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch trashed roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get trashed roles
      tags:
      - Role
  /api/role/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a role by the associated user ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role by user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get role by user ID
      tags:
      - Role
  /api/transaction:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Transactions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve Transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all Transactions
      tags:
      - Transaction
  /api/transaction/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a Transaction by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: Invalid Transaction ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve Transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find Transaction by ID
      tags:
      - Transaction
  /api/transaction/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active Transactions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active Transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransactionDeleteAt'
        "500":
          description: Failed to retrieve Transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active Transactions
      tags:
      - Transaction
  /api/transaction/create:
    post:
      consumes:
      - application/json
      description: Create an existing Transaction record with the provided details
      parameters:
      - description: Create Transaction request
        in: body
        name: CreateTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created Transaction
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create Transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create an existing Transaction
      tags:
      - Transaction
  /api/transaction/delete/{id}:
    post:
      consumes:
      - application/json
      description: Permanently delete a Transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted Transaction record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete Transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a Transaction
      tags:
      - Transaction
  /api/transaction/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all trashed Transaction records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all Transaction records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionDelete'
        "500":
          description: Failed to delete Transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all trashed Transactions
      tags:
      - Transaction
  /api/transaction/merchant/monthly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthFailed'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction failed amounts by merchant
      tags:
      - Transaction
  /api/transaction/merchant/monthly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthSuccess'
        "400":
          description: Invalid merchant ID, year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction success amounts by merchant
      tags:
      - Transaction
  /api/transaction/merchant/monthly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction failed methods by merchant
      tags:
      - Transaction
  /api/transaction/merchant/monthly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction success methods by merchant
      tags:
      - Transaction
  /api/transaction/merchant/yearly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction failed amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearFailed'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction failed amounts by merchant
      tags:
      - Transaction
  /api/transaction/merchant/yearly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction failed methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction failed methods by merchant
      tags:
      - Transaction
  /api/transaction/merchant/yearly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction success methods by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction success methods by merchant
      tags:
      - Transaction
  /api/transaction/merchant/yearly-success-amount/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction success amounts by merchant ID
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearSuccess'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction success amounts by merchant
      tags:
      - Transaction
  /api/transaction/monthly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction failed amounts
      tags:
      - Transaction
  /api/transaction/monthly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction success amounts
      tags:
      - Transaction
  /api/transaction/monthly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction failed methods
      tags:
      - Transaction
  /api/transaction/monthly-method-successs:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction success methods
      tags:
      - Transaction
  /api/transaction/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed Transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored Transaction
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionDeleteAt'
        "400":
          description: Invalid Transaction ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore Transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed Transaction
      tags:
      - Transaction
  /api/transaction/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all trashed Transaction records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all Transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionAll'
        "500":
          description: Failed to restore Transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all trashed Transactions
      tags:
      - Transaction
  /api/transaction/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed Transaction records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed Transaction data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransactionDeleteAt'
        "500":
          description: Failed to retrieve Transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed Transactions
      tags:
      - Transaction
  /api/transaction/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed Transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed Transaction
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed Transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed Transaction
      tags:
      - Transaction
  /api/transaction/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing Transaction record with the provided details
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Transaction request
        in: body
        name: UpdateTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Transaction
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update Transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing Transaction
      tags:
      - Transaction
  /api/transaction/yearly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction failed amounts
      tags:
      - Transaction
  /api/transaction/yearly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction success amounts
      tags:
      - Transaction
  /api/transaction/yearly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction failed methods
      tags:
      - Transaction
  /api/transaction/yearly-method-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesTransactionYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction success methods
      tags:
      - Transaction
  /api/user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all users
      tags:
      - User
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find user by ID
      tags:
      - User
  /api/user/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active users
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationUserDeleteAt'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active users
      tags:
      - User
  /api/user/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: Create user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new user
      tags:
      - User
  /api/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User
  /api/user/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User
  /api/user/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user
          schema:
            $ref: '#/definitions/response.ApiResponseUserDeleteAt'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User
  /api/user/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user all
          schema:
            $ref: '#/definitions/response.ApiResponseUserAll'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User
  /api/user/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed user records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed user data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationUserDeleteAt'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed users
      tags:
      - User
  /api/user/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed user
          schema:
            $ref: '#/definitions/response.ApiResponseUserDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed user
      tags:
      - User
  /api/user/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing user record with the provided details
      parameters:
      - description: Update user request
        in: body
        name: UpdateUserRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing user
      tags:
      - User
  /api/voucher:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Vouchers
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Vouchers
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationVoucher'
        "500":
          description: Failed to retrieve Voucher data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all Vouchers
      tags:
      - Voucher
  /api/voucher/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a Voucher by ID
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Voucher data
          schema:
            $ref: '#/definitions/response.ApiResponseVoucher'
        "400":
          description: Invalid Voucher ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve Voucher data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find Voucher by ID
      tags:
      - Voucher
  /api/voucher/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active Vouchers
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active Vouchers
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationVoucherDeleteAt'
        "500":
          description: Failed to retrieve Voucher data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active Vouchers
      tags:
      - Voucher
  /api/voucher/create:
    post:
      consumes:
      - multipart/form-data
      description: Create an existing Voucher record with the provided details
      parameters:
      - description: Merchant ID
        in: formData
        name: merchant_id
        required: true
        type: string
      - description: Category ID
        in: formData
        name: category_id
        required: true
        type: string
      - description: Product name
        in: formData
        name: name
        required: true
        type: string
      - description: Product image file
        in: formData
        name: image_path
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created Voucher
          schema:
            $ref: '#/definitions/response.ApiResponseVoucher'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create Voucher
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create an existing Voucher
      tags:
      - Voucher
  /api/voucher/delete/{id}:
    post:
      consumes:
      - application/json
      description: Permanently delete a Voucher record by its ID.
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted Voucher record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseVoucherDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete Voucher
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a Voucher
      tags:
      - Voucher
  /api/voucher/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all trashed Voucher records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all Voucher records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseVoucherDelete'
        "500":
          description: Failed to delete Vouchers
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all trashed Vouchers
      tags:
      - Voucher
  /api/voucher/merchant/monthly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly failed amounts for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly failed amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthFailed'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly failed amounts by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/monthly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly success amounts for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly success amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthSuccess'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly success amounts by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/monthly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly failed methods for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly failed methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly failed methods by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/monthly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly success methods for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly success methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly success methods by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/yearly-amount-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly failed amounts for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly failed amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearFailed'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly failed amounts by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/yearly-amount-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly success amounts for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly success amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearSuccess'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly success amounts by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/yearly-method-failed/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly failed methods for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly failed methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly failed methods by Merchant ID
      tags:
      - Voucher
  /api/voucher/merchant/yearly-method-success/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly success methods for a specific Merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly success methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly success methods by Merchant ID
      tags:
      - Voucher
  /api/voucher/monhtly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve monthly voucher success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly voucher success amounts
      tags:
      - Voucher
  /api/voucher/monhtly-method-success:
    get:
      consumes:
      - application/json
      description: Retrieve monthly voucher success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly voucher success methods
      tags:
      - Voucher
  /api/voucher/monthly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly voucher failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly voucher failed amounts
      tags:
      - Voucher
  /api/voucher/monthly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve monthly voucher failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly voucher failed methods
      tags:
      - Voucher
  /api/voucher/myvoucher/monhtly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly success amounts for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly success amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthSuccess'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly success amounts by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/monthly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly failed amounts for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly failed amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthFailed'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly failed amounts by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/monthly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly failed methods for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly failed methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly failed methods by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/monthly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve monthly success methods for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly success methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherMonthMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly success methods by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/yearly-amount-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly failed amounts for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly failed amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearFailed'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly failed amounts by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/yearly-amount-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly success amounts for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly success amounts
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearSuccess'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly success amounts by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/yearly-method-failed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly failed methods for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly failed methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly failed methods by Voucher ID
      tags:
      - Voucher
  /api/voucher/myvoucher/yearly-method-success/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve yearly success methods for a specific Voucher
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly success methods
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly success methods by Voucher ID
      tags:
      - Voucher
  /api/voucher/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed Voucher record by its ID.
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored Voucher
          schema:
            $ref: '#/definitions/response.ApiResponseVoucherDeleteAt'
        "400":
          description: Invalid Voucher ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore Voucher
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed Voucher
      tags:
      - Voucher
  /api/voucher/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all trashed Voucher records.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all Vouchers
          schema:
            $ref: '#/definitions/response.ApiResponseVoucherAll'
        "500":
          description: Failed to restore Vouchers
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all trashed Vouchers
      tags:
      - Voucher
  /api/voucher/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed Voucher records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed Voucher data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationVoucherDeleteAt'
        "500":
          description: Failed to retrieve Voucher data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed Vouchers
      tags:
      - Voucher
  /api/voucher/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed Voucher record by its ID.
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed Voucher
          schema:
            $ref: '#/definitions/response.ApiResponseVoucherDeleteAt'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed Voucher
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed Voucher
      tags:
      - Voucher
  /api/voucher/update/{id}:
    post:
      consumes:
      - multipart/form-data
      description: Update an existing Voucher record with the provided details
      parameters:
      - description: Voucher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Merchant ID
        in: formData
        name: merchant_id
        required: true
        type: string
      - description: Category ID
        in: formData
        name: category_id
        required: true
        type: string
      - description: Product name
        in: formData
        name: name
        required: true
        type: string
      - description: Product image file
        in: formData
        name: image_path
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Voucher
          schema:
            $ref: '#/definitions/response.ApiResponseVoucher'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update Voucher
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing Voucher
      tags:
      - Voucher
  /api/voucher/yearly-amount-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly voucher failed amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly voucher failed amounts
      tags:
      - Voucher
  /api/voucher/yearly-amount-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly voucher success amounts
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly voucher success amounts
      tags:
      - Voucher
  /api/voucher/yearly-method-failed:
    get:
      consumes:
      - application/json
      description: Retrieve yearly voucher failed methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly voucher failed methods
      tags:
      - Voucher
  /api/voucher/yearly-method-success:
    get:
      consumes:
      - application/json
      description: Retrieve yearly voucher success methods
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponsesVoucherYearMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly voucher success methods
      tags:
      - Voucher
swagger: "2.0"
