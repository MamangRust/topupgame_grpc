// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
)

type Querier interface {
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) (*UserRole, error)
	// Create Bank
	CreateBank(ctx context.Context, name string) (*Bank, error)
	// Create Category
	CreateCategory(ctx context.Context, name string) (*Category, error)
	// Create Merchant
	CreateMerchant(ctx context.Context, arg CreateMerchantParams) (*Merchant, error)
	// Create Nominal
	CreateNominal(ctx context.Context, arg CreateNominalParams) (*Nominal, error)
	CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (*RefreshToken, error)
	CreateRole(ctx context.Context, roleName string) (*Role, error)
	// Create Transaction
	CreateTransaction(ctx context.Context, arg CreateTransactionParams) (*Transaction, error)
	// Create User
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	// Create Voucher
	CreateVoucher(ctx context.Context, arg CreateVoucherParams) (*Voucher, error)
	DecreaseNominalQuantity(ctx context.Context, arg DecreaseNominalQuantityParams) error
	// Delete All Trashed Banks Permanently
	DeleteAllPermanentBanks(ctx context.Context) error
	// Delete All Trashed Categories Permanently
	DeleteAllPermanentCategories(ctx context.Context) error
	// Delete All Trashed Merchant Permanently
	DeleteAllPermanentMerchants(ctx context.Context) error
	// Delete All Trashed Nominals Permanently
	DeleteAllPermanentNominals(ctx context.Context) error
	// Delete All Trashed Roles Permanently
	DeleteAllPermanentRoles(ctx context.Context) error
	// Delete All Trashed Transactions Permanently
	DeleteAllPermanentTransactions(ctx context.Context) error
	// Delete All Trashed Users Permanently
	DeleteAllPermanentUsers(ctx context.Context) error
	// Delete All Trashed Vouchers Permanently
	DeleteAllPermanentVouchers(ctx context.Context) error
	// Delete Bank Permanently
	DeleteBankPermanently(ctx context.Context, bankID int32) error
	// Delete Category Permanently
	DeleteCategoryPermanently(ctx context.Context, categoryID int32) error
	// Delete Merchant Permanently
	DeleteMerchantPermanently(ctx context.Context, merchantID int32) error
	// Delete Nominal Permanently
	DeleteNominalPermanently(ctx context.Context, nominalID int32) error
	DeletePermanentRole(ctx context.Context, roleID int32) error
	DeleteRefreshToken(ctx context.Context, token string) error
	DeleteRefreshTokenByUserId(ctx context.Context, userID int32) error
	// Delete Transaction Permanently
	DeleteTransactionPermanently(ctx context.Context, transactionID int32) error
	// Delete User Permanently
	DeleteUserPermanently(ctx context.Context, userID int32) error
	// Delete Voucher Permanently
	DeleteVoucherPermanently(ctx context.Context, voucherID int32) error
	FindRefreshTokenByToken(ctx context.Context, token string) (*RefreshToken, error)
	FindRefreshTokenByUserId(ctx context.Context, userID int32) (*RefreshToken, error)
	// Get All Active Roles
	GetActiveRoles(ctx context.Context, arg GetActiveRolesParams) ([]*GetActiveRolesRow, error)
	// Get Bank by ID
	GetBankByID(ctx context.Context, bankID int32) (*Bank, error)
	// Get Banks with Pagination and Total Count
	GetBanks(ctx context.Context, arg GetBanksParams) ([]*GetBanksRow, error)
	// Get Active Banks with Pagination and Total Count
	GetBanksActive(ctx context.Context, arg GetBanksActiveParams) ([]*GetBanksActiveRow, error)
	// Get Trashed Banks with Pagination and Total Count
	GetBanksTrashed(ctx context.Context, arg GetBanksTrashedParams) ([]*GetBanksTrashedRow, error)
	// Get Categories with Pagination and Total Count
	GetCategories(ctx context.Context, arg GetCategoriesParams) ([]*GetCategoriesRow, error)
	// Get Active Categories with Pagination and Total Count
	GetCategoriesActive(ctx context.Context, arg GetCategoriesActiveParams) ([]*GetCategoriesActiveRow, error)
	// Get Trashed Categories with Pagination and Total Count
	GetCategoriesTrashed(ctx context.Context, arg GetCategoriesTrashedParams) ([]*GetCategoriesTrashedRow, error)
	// Get Category by ID
	GetCategoryByID(ctx context.Context, categoryID int32) (*Category, error)
	GetMerchantByID(ctx context.Context, merchantID int32) (*Merchant, error)
	GetMerchants(ctx context.Context, arg GetMerchantsParams) ([]*GetMerchantsRow, error)
	// Get Active Merchants with Pagination and Total Count
	GetMerchantsActive(ctx context.Context, arg GetMerchantsActiveParams) ([]*GetMerchantsActiveRow, error)
	// Get Trashed Merchants with Pagination and Total Count
	GetMerchantsTrashed(ctx context.Context, arg GetMerchantsTrashedParams) ([]*GetMerchantsTrashedRow, error)
	// Get Nominal by ID
	GetNominalByID(ctx context.Context, nominalID int32) (*Nominal, error)
	// Get Nominals with Pagination and Total Count
	GetNominals(ctx context.Context, arg GetNominalsParams) ([]*GetNominalsRow, error)
	// Get Active Nominals with Pagination and Total Count
	GetNominalsActive(ctx context.Context, arg GetNominalsActiveParams) ([]*GetNominalsActiveRow, error)
	// Get Trashed Nominals with Pagination and Total Count
	GetNominalsTrashed(ctx context.Context, arg GetNominalsTrashedParams) ([]*GetNominalsTrashedRow, error)
	GetRole(ctx context.Context, roleID int32) (*Role, error)
	GetRoleByName(ctx context.Context, roleName string) (*Role, error)
	GetRoles(ctx context.Context, arg GetRolesParams) ([]*GetRolesRow, error)
	// Get Transaction by ID
	GetTransactionByID(ctx context.Context, transactionID int32) (*Transaction, error)
	// Get Transactions with Pagination and Total Count
	GetTransactions(ctx context.Context, arg GetTransactionsParams) ([]*GetTransactionsRow, error)
	// Get Active Transactions with Pagination and Total Count
	GetTransactionsActive(ctx context.Context, arg GetTransactionsActiveParams) ([]*GetTransactionsActiveRow, error)
	// Get Trashed Transactions with Pagination and Total Count
	GetTransactionsTrashed(ctx context.Context, arg GetTransactionsTrashedParams) ([]*GetTransactionsTrashedRow, error)
	// Get All Trashed Roles
	GetTrashedRoles(ctx context.Context, arg GetTrashedRolesParams) ([]*GetTrashedRolesRow, error)
	GetTrashedUserRoles(ctx context.Context, userID int32) ([]*GetTrashedUserRolesRow, error)
	// Get User by Email
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	// Get User by ID
	GetUserByID(ctx context.Context, userID int32) (*User, error)
	GetUserRoles(ctx context.Context, userID int32) ([]*Role, error)
	// Get Trashed Users with Pagination and Total Count
	GetUserTrashed(ctx context.Context, arg GetUserTrashedParams) ([]*GetUserTrashedRow, error)
	// Get Users with Pagination and Total Count
	GetUsers(ctx context.Context, arg GetUsersParams) ([]*GetUsersRow, error)
	// Get Active Users with Pagination and Total Count
	GetUsersActive(ctx context.Context, arg GetUsersActiveParams) ([]*GetUsersActiveRow, error)
	// Get Voucher by ID
	GetVoucherByID(ctx context.Context, voucherID int32) (*Voucher, error)
	// Get Vouchers with Pagination and Total Count
	GetVouchers(ctx context.Context, arg GetVouchersParams) ([]*GetVouchersRow, error)
	// Get Active Vouchers with Pagination and Total Count
	GetVouchersActive(ctx context.Context, arg GetVouchersActiveParams) ([]*GetVouchersActiveRow, error)
	// Get Trashed Vouchers with Pagination and Total Count
	GetVouchersTrashed(ctx context.Context, arg GetVouchersTrashedParams) ([]*GetVouchersTrashedRow, error)
	RemoveRoleFromUser(ctx context.Context, arg RemoveRoleFromUserParams) error
	// Restore All Trashed Banks
	RestoreAllBanks(ctx context.Context) error
	// Restore All Trashed Categories
	RestoreAllCategories(ctx context.Context) error
	// Restore All Trashed Merchant
	RestoreAllMerchants(ctx context.Context) error
	// Restore All Trashed Nominals
	RestoreAllNominals(ctx context.Context) error
	// Restore All Trashed Roles
	RestoreAllRoles(ctx context.Context) error
	// Restore All Trashed Transactions
	RestoreAllTransactions(ctx context.Context) error
	// Restore All Trashed Users
	RestoreAllUsers(ctx context.Context) error
	// Restore All Trashed Vouchers
	RestoreAllVouchers(ctx context.Context) error
	// Restore Trashed Bank
	RestoreBank(ctx context.Context, bankID int32) (*Bank, error)
	// Restore Trashed Category
	RestoreCategory(ctx context.Context, categoryID int32) (*Category, error)
	// Restore Trashed Merchant
	RestoreMerchant(ctx context.Context, merchantID int32) (*Merchant, error)
	// Restore Trashed Nominal
	RestoreNominal(ctx context.Context, nominalID int32) (*Nominal, error)
	RestoreRole(ctx context.Context, roleID int32) error
	// Restore Trashed Transaction
	RestoreTransaction(ctx context.Context, transactionID int32) (*Transaction, error)
	// Restore Trashed User
	RestoreUser(ctx context.Context, userID int32) (*User, error)
	RestoreUserRole(ctx context.Context, userRoleID int32) error
	// Restore Trashed Voucher
	RestoreVoucher(ctx context.Context, voucherID int32) (*Voucher, error)
	// Trash Bank (Soft Delete)
	TrashBank(ctx context.Context, bankID int32) (*Bank, error)
	// Trash Category (Soft Delete)
	TrashCategory(ctx context.Context, categoryID int32) (*Category, error)
	// Trash Merchant
	TrashMerchant(ctx context.Context, merchantID int32) (*Merchant, error)
	// Trash Nominal (Soft Delete)
	TrashNominal(ctx context.Context, nominalID int32) (*Nominal, error)
	TrashRole(ctx context.Context, roleID int32) error
	// Trash Transaction (Soft Delete)
	TrashTransaction(ctx context.Context, transactionID int32) (*Transaction, error)
	// Trash User
	TrashUser(ctx context.Context, userID int32) (*User, error)
	TrashUserRole(ctx context.Context, userRoleID int32) error
	// Trash Voucher (Soft Delete)
	TrashVoucher(ctx context.Context, voucherID int32) (*Voucher, error)
	// Update Bank
	UpdateBank(ctx context.Context, arg UpdateBankParams) (*Bank, error)
	// Update Category
	UpdateCategory(ctx context.Context, arg UpdateCategoryParams) (*Category, error)
	// Update Merchant
	UpdateMerchant(ctx context.Context, arg UpdateMerchantParams) (*Merchant, error)
	// Update Nominal
	UpdateNominal(ctx context.Context, arg UpdateNominalParams) (*Nominal, error)
	UpdateRefreshTokenByUserId(ctx context.Context, arg UpdateRefreshTokenByUserIdParams) error
	UpdateRole(ctx context.Context, arg UpdateRoleParams) (*Role, error)
	// Update Transaction
	UpdateTransaction(ctx context.Context, arg UpdateTransactionParams) (*Transaction, error)
	// Update Transaction Status
	UpdateTransactionStatus(ctx context.Context, arg UpdateTransactionStatusParams) error
	// Update User
	UpdateUser(ctx context.Context, arg UpdateUserParams) (*User, error)
	// Update Voucher
	UpdateVoucher(ctx context.Context, arg UpdateVoucherParams) (*Voucher, error)
}

var _ Querier = (*Queries)(nil)
